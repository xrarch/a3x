#include "<df>/dragonfruit.h"
#include "<inc>/a3x.h"

extern HeapInit
extern ConsoleEarlyInit
extern InterruptsInit
extern DeviceInit
extern ConsoleInit
extern FontInit
extern PlatformInit
extern InterruptEnable

extern Main

procedure AntecedentEntry (* -- *)
	HeapInit

	ConsoleEarlyInit
	(* print routines now work, do NOT use them before this *)

	LinkInfo

	"Welcome to ANTECEDENT 3.x\n" Printf

	if (NVRAMCheck ~~)
		"nvram corrupted! formatting\n" Printf
		NVRAMFormat
	end

	PlatformInit

	InterruptsInit

	DeviceInit

	InterruptEnable

	FirmwareBanner

	ConsoleInit

	FontInit

	Main
end

asm "

.entry AntecedentEntry

"

asm "

;set exception vector to zero and immediately cause an exception
;this forces the CPU to reset and do whatever it needs to do that cleanly

Reset:
.global Reset
	li ev, 0
	div r1, r1, zero
.wait:
	b .wait

"

procedure LinkInfo (* -- *)
	pointerof _text "_text = %x " Printf
	pointerof _text_size "_text_size = %x " Printf
	pointerof _text_end "_text_end = %x\n" Printf

	pointerof _data "_data = %x " Printf
	pointerof _data_size "_data_size = %x " Printf
	pointerof _data_end "_data_end = %x\n" Printf

	pointerof _bss "_bss = %x " Printf
	pointerof _bss_size "_bss_size = %x " Printf
	pointerof _bss_end "_bss_end = %x\n" Printf
end

procedure LateReset (* -- *)
	"\[c" Printf
	Reset
end

procedure BannerPrint (* ... -- *)
	Printf
end

procedure FirmwareBanner (* -- *)
	'\n' Putc

	"/" DeviceSelect
		"author" DGetProperty "version" DGetProperty DGetName "Implementation details: %s %s written by %s\n" BannerPrint
		"buildDate" DGetProperty "build" DGetProperty "Build %s, built on %s\n" BannerPrint
	DeviceExit

	"/platform" DeviceSelect
		"model" DGetProperty "Platform: %s\n" BannerPrint
	DeviceExit

	"/cpu" DeviceSelect
		"type" DGetProperty "CPU: %s\n" BannerPrint
	DeviceExit

	"/memory" DeviceSelect
		"totalRAM" DGetProperty 1024 / "RAM: %dkb\n" BannerPrint
	DeviceExit

	'\n' Putc
end