#include "<df>/dragonfruit.h"
#include "<inc>/a3x.h"

(* citron bus functions *)
(* disabling and restoring interrupts is up to the user of these functions *)

extern BuildSatsuma
extern BuildCClock
extern BuildCSerial
extern BuildAmanatsu

procedure BuildCitron (* -- *)
	DeviceNew
		"citron" DSetName

		"bus" "deviceType" DAddProperty

		"AISA,citron" "model" DAddProperty

		pointerof DCitronInb "citron,inb" DAddMethod
		pointerof DCitronIni "citron,ini" DAddMethod
		pointerof DCitronInl "citron,inl" DAddMethod
		pointerof DCitronOutb "citron,outb" DAddMethod
		pointerof DCitronOuti "citron,outi" DAddMethod
		pointerof DCitronOutl "citron,outl" DAddMethod
		pointerof DCitronCommand "citron,command" DAddMethod
		pointerof DCitronCommandASync "citron,commandAsync" DAddMethod

		BuildSatsuma

		BuildCClock

		BuildCSerial

		BuildAmanatsu
	DeviceExit
end

procedure DCitronInb (* port -- byte *)
	4 * DCitronBase + gb
end

procedure DCitronIni (* port -- int *)
	4 * DCitronBase + gi
end

procedure DCitronInl (* port -- long *)
	4 * DCitronBase + @
end

procedure DCitronOutb (* byte port -- *)
	4 * DCitronBase + sb
end

procedure DCitronOuti (* int port -- *)
	4 * DCitronBase + si
end

procedure DCitronOutl (* long port -- *)
	4 * DCitronBase + !
end

procedure DCitronCommand (* command port -- *)
	auto pbase
	4 * DCitronBase + pbase!

	while (pbase@ gb 0 ~=) end

	auto cmd
	cmd!

	cmd@ pbase@ sb

	while (pbase@ gb 0 ~=) end
end

(* doesn't wait for the device to report the operation as completed before returning *)
procedure DCitronCommandASync (* command port -- *)
	auto pbase
	4 * DCitronBase + pbase!

	while (pbase@ gb 0 ~=) end

	auto cmd
	cmd!

	cmd@ pbase@ sb
end