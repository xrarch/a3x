#include "<df>/dragonfruit.h"
#include "<inc>/a3x.h"

extern AKeyboardInit { -- }
extern AKeyboardPoll { -- }

extern AMouseInit { -- }
extern AMousePoll { -- }

fn BuildAmanatsu { -- }
	DeviceNew
		"amanatsu" DSetName

		"bus" "deviceType" DAddProperty

		"AISA,amanatsu" "model" DAddProperty

		1 "revision" DAddProperty

		pointerof AmanatsuReset "reset" DAddMethod

		AKeyboardInit
		AKeyboardPoll
		
		AMouseInit
		AMousePoll
	DeviceExit
end

(* start assigning interrupts at 0x40 *)
var AmaLastInterrupt 0x40

(* disabling and restoring interrupts is up to the user of these functions *)

fn AmanatsuPoll { num -- mid }
	num@ AmanatsuSelectDev AmanatsuReadMID mid!
end

fn AmanatsuSelectDev { num -- }
	num@ AmaPortDev DCitronOutb
end

fn AmanatsuReadMID { -- mid }
	AmaPortMID DCitronInl mid!
end

fn AmanatsuCommand { cmd -- }
	cmd@ AmaPortCMD DCitronOutl

	while (AmaPortCMD DCitronInl 0 ~=) end
end

fn AmanatsuCommandAsync { cmd -- }
	cmd@ AmaPortCMD DCitronOutl
end

fn AmanatsuWriteA { long -- }
	long@ AmaPortA DCitronOutl
end

fn AmanatsuWriteB { long -- }
	long@ AmaPortB DCitronOutl
end

fn AmanatsuReadA { -- long }
	AmaPortA DCitronInl long!
end

fn AmanatsuReadB { -- long }
	AmaPortB DCitronInl long!
end

fn AmanatsuSetInterrupt { handler dev -- num }
	handler@ AmaLastInterrupt@ InterruptRegister
	AmaLastInterrupt@ dev@ 1 AmanatsuSpecialCMD

	AmaLastInterrupt@ num!

	1 AmaLastInterrupt +=
end

fn AmanatsuSpecialCMD { a b cmd -- }
	0 AmanatsuSelectDev
	a@ AmanatsuWriteA
	b@ AmanatsuWriteB

	cmd@ AmanatsuCommand
end

fn AmanatsuReset { -- }
	0 0 2 AmanatsuSpecialCMD
end




