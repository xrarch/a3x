#include "<df>/dragonfruit.h"
#include "<inc>/a3x.h"

const SerialCmdPort 0x10
const SerialDataPort 0x11

const SerialCmdWrite 1
const SerialCmdRead 2

var SerialPortA 0
var SerialPortB 0

fn BuildSerialPort { num -- }
	DeviceNew
		auto qb
		6 Calloc qb!

		num@ qb@ itoa
		qb@ DSetName

		SerialCmdPort num@ 2 * + "serial,cmdPort" DAddProperty
		SerialDataPort num@ 2 * + "serial,dataPort" DAddProperty

		pointerof SerialWriteM "write" DAddMethod
		pointerof SerialReadM "read" DAddMethod

		"serial" "deviceType" DAddProperty

		"AISA,serial-port" "model" DAddProperty

		1 "revision" DAddProperty

		if (num@ 0 ==)
			0x3 "interrupt#" DAddProperty
			DevCurrent@ SerialPortA!
		end else
			0x18 "interrupt#" DAddProperty
			DevCurrent@ SerialPortB!
		end
	DeviceExit
end

fn BuildCSerial { -- }
	DeviceNew
		"serial" DSetName

		0 BuildSerialPort
		1 BuildSerialPort
	DeviceExit
end

fn private SerialWriteM { argvt argcn -- out1 out2 out3 }
	argvt@ @
	SerialWrite
end

fn SerialWrite { c -- }
	auto cmd
	auto data

	"serial,dataPort" DGetProperty data!
	"serial,cmdPort" DGetProperty cmd!

	auto rs
	InterruptDisable rs!

	c@ data@ DCitronOutb
	SerialCmdWrite cmd@ DCitronCommand

	rs@ InterruptRestore
end

fn private SerialReadM { argvt argcn -- out1 out2 out3 }
	SerialRead out1!
end

fn SerialRead { -- c }
	auto cmd
	auto data

	"serial,dataPort" DGetProperty data!
	"serial,cmdPort" DGetProperty cmd!

	auto rs
	InterruptDisable rs!

	SerialCmdRead cmd@ DCitronCommand
	data@ DCitronIni c!

	rs@ InterruptRestore

	if (c@ 0xFFFF ==)
		ERR c! return
	end
end