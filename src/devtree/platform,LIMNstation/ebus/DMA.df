#include "<df>/dragonfruit.h"
#include "<inc>/a3x.h"

(* ebus dma controller driver *)

fn BuildDMA { -- }
	DeviceNew
		"dma" DSetName

		"dma-controller" "deviceType" DAddProperty

		"AISA,ebus-dma" "model" DAddProperty

		1 "revision" DAddProperty

		DMABase "address" DAddProperty

		0x2 "interrupt#" DAddProperty

		pointerof DMATransferM "transfer" DAddMethod
		pointerof DMABitTransferM "bitTransfer" DAddMethod
	DeviceExit

	DMAWaitUnbusy
	0 DMARegisterStatus!
end

fn DMAWaitUnbusy { -- }
	while (DMARegisterStatus@ 1 &) end
end

fn DMADoOperation { -- }
	DMARegisterStatus@ 1 | DMARegisterStatus!
end

fn private DMAFullTransfer { src dest srcinc destinc count mode lines destmod srcmod bitmode -- }
	src@ DMARegisterSource!
	dest@ DMARegisterDest!
	srcinc@ DMARegisterSInc!
	destinc@ DMARegisterDInc!
	count@ DMARegisterCount!
	mode@ DMARegisterMode!
	lines@ DMARegisterLines!
	destmod@ DMARegisterDestMod!
	srcmod@ DMARegisterSrcMod!

	bitmode@ DMARegisterBitMode!

	auto rs
	InterruptDisable rs!

	DMADoOperation
	DMAWaitUnbusy

	rs@ InterruptRestore
end

fn private DMABitTransferM { argvt argcn -- out1 out2 out3 }
	argvt@ 44 + @
	argvt@ 40 + @
	argvt@ 36 + @
	argvt@ 32 + @
	argvt@ 28 + @
	argvt@ 24 + @
	argvt@ 20 + @
	argvt@ 16 + @
	argvt@ 12 + @
	argvt@ 8 + @
	argvt@ 4 + @
	argvt@ @
	DMABitTransfer
end

fn DMABitTransfer { src dest srcinc destinc count mode lines destmod srcmod direction clearbyte setbyte -- }
	clearbyte@ DMARegisterClearByte!
	setbyte@ DMARegisterSetByte!
	direction@ DMARegisterDirection!

	src@ dest@ srcinc@ destinc@ count@ mode@ lines@ destmod@ srcmod@ 1 DMAFullTransfer
end

fn private DMATransferM { argvt argcn -- out1 out2 out3 }
	argvt@ 32 + @
	argvt@ 28 + @
	argvt@ 24 + @
	argvt@ 20 + @
	argvt@ 16 + @
	argvt@ 12 + @
	argvt@ 8 + @
	argvt@ 4 + @
	argvt@ @
	DMATransfer
end

fn DMATransfer { src dest srcinc destinc count mode lines destmod srcmod -- }
	src@ dest@ srcinc@ destinc@ count@ mode@ lines@ destmod@ srcmod@ 0 DMAFullTransfer
end