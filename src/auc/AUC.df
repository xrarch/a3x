#include "<df>/dragonfruit.h"
#include "<inc>/a3x.h"

externconst AUCNativeCalls

extern AUCInterpret

var AUCCurrent -1
public AUCCurrent

var AUCCurrentBoard -1
public AUCCurrentBoard

var AUCData 0
public AUCData

var AUCReturnStack 0
public AUCReturnStack

var AUCCode 0
public AUCCode

const NativeCallCount 25

const AUCEntry 0x0

table AUCErrors
	"Illegal microcode"
	"ok"
	"Illegal a3xcall from microcode"
	"Invalid AUC ROM"
	"Missing AUCInit symbol"
endtable
public AUCErrors

procedure AUCInit { -- }
	1024 Malloc AUCData!
	1024 Malloc AUCReturnStack!
end

procedure AUCNativeCall { num -- ok }
	if (num@ NativeCallCount >=)
		0 ok!
		return
	end

	[num@]AUCNativeCalls@ Call
	1 ok!
end

procedure AUCEvaluate { slotspace AUC -- ok }
	1 ok!

	slotspace@ AUCEntry AUC@ + AUC@ AUCEvaluateFunc ok!
end

procedure AUCAddMethod { ptr name -- }
	AUCCurrentBoard@ ptr@ AUCCurrent@ name@ DAddMethodFull
end

procedure AUCEvaluateFunc { slotspace func AUC -- ok }
	AUC@ AUCCurrent!

	slotspace@ AUCCurrentBoard!

	AUC@ AUCCode!

	slotspace@ func@ AUCCode@ AUCInterpret ok!
end